---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
  #   - name: intel-device-plugin-gpu
  #     namespace: tools
  #   - name: rook-ceph-cluster
  #     namespace: rook-ceph
    - name: volsync
      namespace: storage
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/lildrunkensmurf/plex
              tag: 1.32.8.7639-fb6452ebf@sha256:6fa99098445585b0cb69f2603d32bbe83a74d16c7cedbabf99a0bd1c9d0973c6
            env:
              TZ: "${TIMEZONE}"
              ADVERTISE_IP: "https://{{ .Release.Name }}.${SECRET_DOMAIN}:443,http://10.10.30.101:32400"
              HOSTNAME: "Quasar"
            # envFrom:
            #   - secretRef:
            #       name: plex-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
            #   limits:
            #     gpu.intel.com/i915: 1
            #     memory: 16Gi
        pod:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values: ["frigate"]
                  topologyKey: kubernetes.io/hostname
          # nodeSelector:
          #   intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 105, 10000]
    service:
      main:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 10.10.30.101
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          cert-manager.io/cluster-issuer: letsencrypt-production
          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: plex.png
          gethomepage.dev/name: Plex
          gethomepage.dev/group: Media
          gethomepage.dev/widget.type: plex
          gethomepage.dev/widget.url: http://plex.media:32400
          # gethomepage.dev/widget.key: '{{HOMEPAGE_VAR_PLEX_KEY}}'
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  ports: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: *app
      media:
        enabled: true
        type: nfs
        server: "192.168.1.67"
        path: "/mnt/sega/PlexNAS"
        mountPath: /media
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir